(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{1002:function(s,a,t){s.exports=t.p+"assets/img/image-20210119110105524-1624278596983.cb87aa5c.png"},1003:function(s,a,t){s.exports=t.p+"assets/img/image-20210119111414152-1624278596983.d344da78.png"},1004:function(s,a,t){s.exports=t.p+"assets/img/image-20210119114146054-1624278596983.b5cacded.png"},1005:function(s,a,t){s.exports=t.p+"assets/img/image-20210119114830567-1624278596983.625bee65.png"},1006:function(s,a,t){s.exports=t.p+"assets/img/image-20210119115531397-1624278596983.bfdea84a.png"},1007:function(s,a,t){s.exports=t.p+"assets/img/image-20210119145957033-1624278596983.29e5c404.png"},1008:function(s,a,t){s.exports=t.p+"assets/img/image-20210119150243286-1624278596983.37cee6d1.png"},1009:function(s,a,t){s.exports=t.p+"assets/img/image-20210119150948690-1624278596984.773cb01a.png"},1010:function(s,a,t){s.exports=t.p+"assets/img/image-20210119152027355-1624278596984.1404487d.png"},1011:function(s,a,t){s.exports=t.p+"assets/img/image-20210119152400295-1624278596984.2ca5209f.png"},1012:function(s,a,t){s.exports=t.p+"assets/img/image-20210119153133497-1624278596984.d937b934.png"},1013:function(s,a,t){s.exports=t.p+"assets/img/image-20210119153147946-1624278596984.2ca0414e.png"},1014:function(s,a,t){s.exports=t.p+"assets/img/image-20210119153234653-1624278596984.692a3809.png"},1015:function(s,a,t){s.exports=t.p+"assets/img/image-20210119153420530-1624278596984.f00bb369.png"},1016:function(s,a,t){s.exports=t.p+"assets/img/image-20210119153500559-1624278596984.55e9cdf6.png"},1017:function(s,a,t){s.exports=t.p+"assets/img/image-20210119153557781-1624278596984.f95b05d2.png"},1018:function(s,a,t){s.exports=t.p+"assets/img/image-20210119153629618-1624278596984.1686a8cb.png"},1019:function(s,a,t){s.exports=t.p+"assets/img/image-20210119153849357-1624278596984.e50d817e.png"},1020:function(s,a,t){s.exports=t.p+"assets/img/image-20210621211929467.9030702d.png"},1021:function(s,a,t){s.exports=t.p+"assets/img/image-20210621212250395.21a2abdc.png"},1022:function(s,a,t){s.exports=t.p+"assets/img/image-20210119161418971-1624278596984.7110bcc7.png"},1023:function(s,a,t){s.exports=t.p+"assets/img/image-20210119162745358-1624278596984.47a29cb8.png"},1024:function(s,a,t){s.exports=t.p+"assets/img/image-20210119162745358.47a29cb8.png"},1025:function(s,a,t){s.exports=t.p+"assets/img/image-20210119163257336-1624278596984.7ce4001b.png"},1026:function(s,a,t){s.exports=t.p+"assets/img/image-20210119163436455-1624278596984.7e6ed0d6.png"},1027:function(s,a,t){s.exports=t.p+"assets/img/image-20210119163622645-1624278596984.48571343.png"},1028:function(s,a,t){s.exports=t.p+"assets/img/image-20210119171631437-1624278596984.568380d8.png"},1029:function(s,a,t){s.exports=t.p+"assets/img/image-20210119172146071-1624278596984.021d9a3a.png"},1030:function(s,a,t){s.exports=t.p+"assets/img/image-20210119174053997-1624278596984.8727f911.png"},1031:function(s,a,t){s.exports=t.p+"assets/img/image-20210119174240364-1624278596984.62611f21.png"},1032:function(s,a,t){s.exports=t.p+"assets/img/image-20210119175323679-1624278596984.20e515ff.png"},1033:function(s,a,t){s.exports=t.p+"assets/img/image-20210119175809758-1624278596984.b32654f5.png"},1034:function(s,a,t){s.exports=t.p+"assets/img/image-20210621215351365.eb0d3073.png"},1035:function(s,a,t){s.exports=t.p+"assets/img/image-20210621215718825.3ea2bb99.png"},1036:function(s,a,t){s.exports=t.p+"assets/img/image-20210621215945802.50d17395.png"},1037:function(s,a,t){s.exports=t.p+"assets/img/image-20210621220059751.1fdde923.png"},1038:function(s,a,t){s.exports=t.p+"assets/img/image-20210119180458274-1624278596984.ad12775e.png"},1039:function(s,a,t){s.exports=t.p+"assets/img/image-20210119180725798-1624278596984.55af1e90.png"},1040:function(s,a,t){s.exports=t.p+"assets/img/image-20210119180930539-1624278596984.5c35d609.png"},1601:function(s,a,t){"use strict";t.r(a);var n=t(3),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),a("h3",{attrs:{id:"引入搜索领域相关知识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引入搜索领域相关知识"}},[s._v("#")]),s._v(" 引入搜索领域相关知识")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("技术栈")]),s._v(" "),a("ul",[a("li",[s._v("elasticSearch : 主要是用于"),a("strong",[s._v("做全文检索")]),s._v(" 功能: 数据的存储 和 数据的查询 --- 重要的")]),s._v(" "),a("li",[s._v("logstash: 主要是用于进行"),a("strong",[s._v("数据的传递采集工作")]),s._v(": 将数据从一个地方，搬运到另一个地方去-- 了解")]),s._v(" "),a("li",[s._v("Kibana : 主要是用于"),a("strong",[s._v("图标报表展示 以及 数据探索")]),s._v(" --- 了解，使用较少")]),s._v(" "),a("li",[s._v("Beats : 主要是用于进行"),a("strong",[s._v("数据的写入工作")]),s._v(" -- 了解")]),s._v(" "),a("li",[s._v("大数据分析过程：数据采集-数据存储-数据ETL(清洗)-数据分析-数据展示")]),s._v(" "),a("li",[a("img",{attrs:{src:t(1002),alt:"image-20210119110105524"}})])])]),s._v(" "),a("li",[a("p",[s._v("场景：")]),s._v(" "),a("ul",[a("li",[s._v("百度搜索")]),s._v(" "),a("li",[s._v("谷歌搜索")]),s._v(" "),a("li",[s._v("360搜索")]),s._v(" "),a("li",[s._v("UC搜索")]),s._v(" "),a("li",[s._v("JD搜索-淘宝商品搜索")]),s._v(" "),a("li",[s._v("OA查找关键人")])])]),s._v(" "),a("li",[a("p",[s._v("大数据搜索")]),s._v(" "),a("ul",[a("li",[s._v("搜索：任意场景下，寻找你想要的信息或数据\n"),a("ul",[a("li",[s._v("需要键入一些感兴趣的关键字查询出信息")])])]),s._v(" "),a("li",[s._v("传统的搜索\n"),a("ul",[a("li",[s._v("关系型数据库的弊端")]),s._v(" "),a("li",[a("img",{staticStyle:{zoom:"200%"},attrs:{src:"ElasticSearch.assets/image-20210119111121295.png",alt:"image-20210119111121295"}})]),s._v(" "),a("li",[a("img",{staticStyle:{zoom:"150%"},attrs:{src:"ElasticSearch.assets/image-20210119111103543.png",alt:"image-20210119111103543"}})])])])])])]),s._v(" "),a("h2",{attrs:{id:"es介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es介绍"}},[s._v("#")]),s._v(" ES介绍")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("ES提供分布式搜索和查询的引擎")])]),s._v(" "),a("li",[a("p",[a("img",{attrs:{src:t(1003),alt:"image-20210119111414152"}})])]),s._v(" "),a("li",[a("p",[s._v("ES发展经历阶段")]),s._v(" "),a("ul",[a("li",[s._v("Lucene(单机版本的Jar包搜索服务)---------Solr(3.0以后就具备分布式功能)---------ES(分布式搜索和查询)")]),s._v(" "),a("li",[s._v("ES是使用Java开发的")])])])]),s._v(" "),a("h2",{attrs:{id:"es特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es特点"}},[s._v("#")]),s._v(" ES特点")]),s._v(" "),a("p",[s._v("1.分布式的实时文件存储，每个字段都被索引并可被搜索")]),s._v(" "),a("p",[s._v("2.分布式的实时分析搜索引擎")]),s._v(" "),a("p",[s._v("3.可以扩展到上百台服务器，处理PB级结构化或非结构化数据")]),s._v(" "),a("ul",[a("li"),s._v(" "),a("li",[s._v("ES那些公司在使用：\n"),a("ul",[a("li",[a("img",{staticStyle:{zoom:"150%"},attrs:{src:"ElasticSearch.assets/image-20210119112341381.png",alt:"image-20210119112341381"}})]),s._v(" "),a("li",[a("img",{staticStyle:{zoom:"150%"},attrs:{src:"ElasticSearch.assets/image-20210119112554129.png",alt:"image-20210119112554129"}})]),s._v(" "),a("li",[s._v("Spark比Hadoop块100倍\n"),a("ul",[a("li",[s._v("Spark拿的最强项和Hadoop最弱项对比")]),s._v(" "),a("li",[s._v("Hadoop3.x是Spark的3倍")])])]),s._v(" "),a("li",[s._v("ES和Solr对比\n"),a("ul",[a("li",[s._v("ES是使用"),a("strong",[s._v("Json文件格式")]),s._v("同时"),a("strong",[s._v("自己管理自己的分布式状态")]),s._v("的搜索工具")]),s._v(" "),a("li",[s._v("后面学习的Zookeeper就是负责状态的管理，但是ES自己管理状态(集群状态)")]),s._v(" "),a("li",[a("img",{staticStyle:{zoom:"150%"},attrs:{src:"ElasticSearch.assets/image-20210119112745437.png",alt:"image-20210119112745437"}})])])])])])]),s._v(" "),a("h2",{attrs:{id:"入门案例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#入门案例"}},[s._v("#")]),s._v(" 入门案例")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("什么是Lucene？")]),s._v(" "),a("ul",[a("li",[s._v("单机搜索框架，提供搜索功能")])])]),s._v(" "),a("li",[a("p",[s._v("如何实现全文检索")]),s._v(" "),a("ul",[a("li",[s._v("1-引入结构化数据和非结构化数据搜索\n"),a("ul",[a("li",[s._v("针对结构化数据，使用MySQL的技术")]),s._v(" "),a("li",[s._v("针对非结构化和半结构化，使用ES-Solr-lucecne完成")])])]),s._v(" "),a("li",[s._v("2-全文检索，构建倒排索引\n"),a("ul",[a("li",[a("img",{attrs:{src:t(1004),alt:"image-20210119114146054"}})]),s._v(" "),a("li",[a("img",{attrs:{src:t(1005),alt:"image-20210119114830567"}})]),s._v(" "),a("li",[a("img",{staticStyle:{zoom:"150%"},attrs:{src:"ElasticSearch.assets/image-20210119114942233.png",alt:"image-20210119114942233"}})]),s._v(" "),a("li",[a("img",{staticStyle:{zoom:"150%"},attrs:{src:"ElasticSearch.assets/image-20210119115048965.png",alt:"image-20210119115048965"}})])])]),s._v(" "),a("li",[s._v("如何执行搜索\n"),a("ul",[a("li",[a("img",{attrs:{src:t(1006),alt:"image-20210119115531397"}})])])])])]),s._v(" "),a("li",[a("p",[s._v("引入美文案例")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("实现搜索的步骤")])]),s._v(" "),a("li",[a("p",[s._v("1-分词")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("如何实现分词？")])]),s._v(" "),a("li",[a("p",[s._v("我爱北京天安门")])]),s._v(" "),a("li",[a("p",[s._v("精确模式：我 爱 北京 天安门")])]),s._v(" "),a("li",[a("p",[s._v("详细模式：我 爱 我爱 北京 我爱北京 天安门 北京天安门")])]),s._v(" "),a("li",[a("p",[s._v("IK分词-----分词的方式")])])])])])])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("cn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("itcast"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lucene")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("wltea"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("analyzer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("core"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IKSegmenter")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("wltea"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("analyzer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("core"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Lexeme")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("io"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IOException")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("io"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("StringReader")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * IK分词器在是一款 基于词典和规则 的中文分词器。\n * IK提供两种分词模式：智能模式和细粒度模式（智能：对应es的IK插件的ik_smart，细粒度：对应es的IK插件的ik_max_word）。\n * 先看两种分词模式的demo和效果\n * 词典：黑马程序员，默认的情况不可能组织在一起，在词典中增加-黑马程序员的词条\n * 停用词：去掉语气词，停顿词，自己指定词\n */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IKSegmenterTest")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" text "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"我是中国人，我爱黑马程序员"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IOException")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IKSegmenter")]),s._v(" segmenter "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IKSegmenter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("StringReader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Lexeme")]),s._v(" next"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"非智能分词结果："')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("next "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" segmenter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("next"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getLexemeText")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-------------------分割线------------------------------"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IKSegmenter")]),s._v(" smartSegmenter "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IKSegmenter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("StringReader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"智能分词结果："')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("next "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" smartSegmenter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("next"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getLexemeText")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//我 中国人 我 爱 黑马 程序员 ")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br")])]),a("ul",[a("li",[a("p",[s._v("2-根据分词的结果查询目标文章")])]),s._v(" "),a("li",[a("p",[s._v("需求：客户输入一个关键词，需要将对应的相关的文章返回到客户部分")])]),s._v(" "),a("li",[a("p",[s._v("步骤：")]),s._v(" "),a("ul",[a("li",[s._v("1-首先需要构建索引\n"),a("ul",[a("li",[s._v("1-首先选择合适的分词工具，这里选择是Standard分词和IK分词")]),s._v(" "),a("li",[s._v("2-构建文档索引")])])]),s._v(" "),a("li",[s._v("2-基于索引查询关联文章\n"),a("ul",[a("li",[s._v("相似度匹配")]),s._v(" "),a("li",[a("img",{staticStyle:{zoom:"150%"},attrs:{src:"ElasticSearch.assets/image-20210119151340706.png",alt:"image-20210119151340706"}})])])])])]),s._v(" "),a("li",[a("p",[s._v("如果需要检索，必然需要分词")])]),s._v(" "),a("li",[a("p",[a("img",{attrs:{src:t(1007),alt:"image-20210119145957033"}})])]),s._v(" "),a("li",[a("p",[s._v("利用标准分词查询指定词语，比如“心”")])]),s._v(" "),a("li",[a("p",[a("img",{attrs:{src:t(1008),alt:"image-20210119150243286"}})])]),s._v(" "),a("li",[a("p",[s._v("引入IK分词就是解决中文的分词的问题")]),s._v(" "),a("ul",[a("li",[s._v("除了IK分词还有Python的Jieba分词(中文中最火的Python分词器)")]),s._v(" "),a("li",[s._v("Java的IK分词器")])])]),s._v(" "),a("li",[a("p",[a("img",{attrs:{src:t(1009),alt:"image-20210119150948690"}})])]),s._v(" "),a("li",[a("p",[s._v("3-返回客户")])]),s._v(" "),a("li",[a("p",[s._v("倒排索引")])]),s._v(" "),a("li",[a("p",[s._v("Lucene不怎么使用：")]),s._v(" "),a("ul",[a("li",[s._v("原因：支持单机搜索")])])]),s._v(" "),a("li",[a("p",[s._v("注意：数据采集，数据存储，数据分析(查询搜索计算)，数据展示")])]),s._v(" "),a("li",[a("p",[s._v("总结：")]),s._v(" "),a("ul",[a("li",[s._v("大数据分布式搜索，lucene原理类似")]),s._v(" "),a("li",[s._v("在分词的情况下，对于给定的搜索词给出合适的匹配的文章等信息")])])])]),s._v(" "),a("h3",{attrs:{id:"全文检索构建和查询步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全文检索构建和查询步骤"}},[s._v("#")]),s._v(" 全文检索构建和查询步骤")]),s._v(" "),a("ul",[a("li",[s._v("1-首先需要构建索引\n"),a("ul",[a("li",[s._v("1-首先选择合适的分词工具，这里选择是Standard分词和IK分词（除了java IK分词还有Python的Jieba分词(中文中最火的Python分词器)）")]),s._v(" "),a("li",[s._v("2-构建文档索引")])])]),s._v(" "),a("li",[s._v("2-基于索引查询关联文章\n"),a("ul",[a("li",[s._v("相似度算法得分排序")]),s._v(" "),a("li",[s._v("返回topn结果")])])])]),s._v(" "),a("h2",{attrs:{id:"es分布式架构的角色划分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es分布式架构的角色划分"}},[s._v("#")]),s._v(" ES分布式架构的角色划分")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("补充JPS：")]),s._v(" "),a("ul",[a("li",[s._v("jps是JDK 1.5提供的一个显示当前所有java进程pid的命令，简单实用，非常适合在linux/unix平台上简单察看当前java进程的一些简单情况。")]),s._v(" "),a("li",[s._v("搭建起来hadoop")]),s._v(" "),a("li",[a("img",{attrs:{src:t(1010),alt:"image-20210119152027355"}})])])]),s._v(" "),a("li",[a("p",[s._v("目标：在分词的情况下，对于给定的搜索词给出合适的匹配的文章等信息")])]),s._v(" "),a("li",[a("p",[s._v("首先观察WebUI端口：启动ES")]),s._v(" "),a("ul",[a("li",[s._v("简单丑陋的Web界面--无法忍受")])])]),s._v(" "),a("li",[a("p",[a("img",{attrs:{src:t(1011),alt:"image-20210119152400295"}})]),s._v(" "),a("ul",[a("li",[s._v("简单美化版本的Web界面--可以接受，基于nodejs开发的插件")]),s._v(" "),a("li",[s._v("ES-Head插件")]),s._v(" "),a("li",[a("img",{attrs:{src:t(1012),alt:"image-20210119153133497"}})]),s._v(" "),a("li",[a("img",{attrs:{src:t(1013),alt:"image-20210119153147946"}})]),s._v(" "),a("li",[a("img",{attrs:{src:t(1014),alt:"image-20210119153234653"}})]),s._v(" "),a("li",[a("img",{attrs:{src:t(1015),alt:"image-20210119153420530"}})]),s._v(" "),a("li",[a("img",{attrs:{src:t(1016),alt:"image-20210119153500559"}})]),s._v(" "),a("li",[a("img",{attrs:{src:t(1017),alt:"image-20210119153557781"}})]),s._v(" "),a("li",[a("img",{attrs:{src:t(1018),alt:"image-20210119153629618"}})])])]),s._v(" "),a("li",[a("p",[s._v("分析角色")]),s._v(" "),a("ul",[a("li",[s._v("Master主节点")]),s._v(" "),a("li",[s._v("Worker从节点")]),s._v(" "),a("li",[s._v("Primary Shard----分布式读写，并发读写")]),s._v(" "),a("li",[s._v("Repication Shard")]),s._v(" "),a("li",[s._v("index索引")]),s._v(" "),a("li",[s._v("type类型")]),s._v(" "),a("li",[s._v("id唯一标识")]),s._v(" "),a("li",[s._v("document：一行数据就是一个文档")]),s._v(" "),a("li",[a("img",{attrs:{src:t(1019),alt:"image-20210119153849357"}})]),s._v(" "),a("li",[s._v("field字段")])])])]),s._v(" "),a("h2",{attrs:{id:"es原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es原理"}},[s._v("#")]),s._v(" ES原理")]),s._v(" "),a("h3",{attrs:{id:"写入原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#写入原理"}},[s._v("#")]),s._v(" "),a("strong",[s._v("写入原理")])]),s._v(" "),a("p",[a("img",{attrs:{src:t(1020),alt:"image-20210621211929467"}})]),s._v(" "),a("ol",[a("li",[a("p",[s._v("选择任意一个DataNode发送请求，例如：node2.itcast.cn。此时，node2.itcast.cn就成为一个   coordinating node（协调节点）")])]),s._v(" "),a("li",[a("p",[s._v("计算得到文档要写入的分片")])])]),s._v(" "),a("p",[s._v("l 根据文档ID确定要将数据写入到那个分片中")]),s._v(" "),a("p",[s._v("l "),a("code",[s._v("shard = hash(routing) % number_of_primary_shards")])]),s._v(" "),a("p",[s._v("l routing 是一个可变值，"),a("strong",[s._v("默认是文档的 _id")])]),s._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[a("p",[s._v("coordinating node会进行路由，将请求转发给对应的primary shard所在的DataNode（假设primary shard在node1.itcast.cn、replica shard在node2.itcast.cn）")])]),s._v(" "),a("li",[a("p",[s._v("node1.itcast.cn节点上的Primary Shard处理请求，写入数据到索引库中，并将数据同步到         Replica shard")])]),s._v(" "),a("li",[a("p",[s._v("Primary Shard和Replica Shard都保存好了文档，返回client")])])]),s._v(" "),a("h3",{attrs:{id:"检索原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#检索原理"}},[s._v("#")]),s._v(" "),a("strong",[s._v("检索原理")]),a("img",{attrs:{src:t(1021),alt:"image-20210621212250395"}})]),s._v(" "),a("ol",[a("li",[a("p",[s._v("client发起查询请求，某个DataNode接收到请求，该DataNode就会成为协调节点（Coordinating Node）")]),s._v(" "),a("p",[s._v("2.协调节点（Coordinating Node）将查询请求广播到"),a("strong",[s._v("每一个数据节点（查询是基于所有节点查询得到结果汇总）")]),s._v("，"),a("strong",[s._v("这些数据节点的分片会处理该查询请求")]),s._v("。协调节点会"),a("strong",[s._v("轮询")]),s._v("所有的分片来自动进行负载均衡")])]),s._v(" "),a("li",[a("p",[s._v("每个分片进行数据查询，将符合条件的数据放在一个"),a("strong",[s._v("优先队列")]),s._v("中，并将这些数据的文档ID、节点信息、"),a("strong",[s._v("分片信息返回给协调节点")])])]),s._v(" "),a("li",[a("p",[s._v("协调节点将所有的结果进行汇总，并进行全局排序")])]),s._v(" "),a("li",[a("p",[s._v("协调节点向包含"),a("strong",[s._v("这些文档ID的分片发送get请求，对应的分片将文档数据返回给")]),s._v("协调节点，"),a("strong",[s._v("最后协调节点将数据返回给客户端")])])])]),s._v(" "),a("h2",{attrs:{id:"elasticsearch准实时索引实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch准实时索引实现"}},[s._v("#")]),s._v(" "),a("strong",[s._v("Elasticsearch准实时索引实现")])]),s._v(" "),a("p",[a("strong",[s._v("溢写到文件系统缓存")])]),s._v(" "),a("p",[s._v("当数据写入到ES分片时，会首先写入到内存中，然后通过内存的buffer生成一个segment，并刷到"),a("strong",[s._v("文件系统缓存")]),s._v("中，数据可以被检索（注意不是直接刷到磁盘）")]),s._v(" "),a("p",[a("strong",[s._v("ES中默认1秒，refresh一次")])]),s._v(" "),a("p",[a("strong",[s._v("写translog保障容错")])]),s._v(" "),a("p",[s._v("在写入到内存中的同时，也会记录translog日志，在refresh期间出现异常，会根据translog来进行数据恢复")]),s._v(" "),a("p",[s._v("等到文件系统缓存中的segment数据都刷到磁盘中，清空translog文件")]),s._v(" "),a("p",[a("strong",[s._v("flush到磁盘")])]),s._v(" "),a("p",[s._v("ES默认"),a("strong",[s._v("每隔30分钟")]),s._v("会将文件系统缓存的数据刷入到磁盘")]),s._v(" "),a("p",[a("strong",[s._v("segment")]),s._v("合并")]),s._v(" "),a("p",[s._v("Segment太多时，ES定期会将多个segment合并成为大的segment，减少索引查询时IO开销，此阶段ES会真正的物理删除（之前执行过的delete的数据,Hbase也是这样的）")]),s._v(" "),a("h2",{attrs:{id:"es架构图-分布式搜索"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es架构图-分布式搜索"}},[s._v("#")]),s._v(" ES架构图(分布式搜索)")]),s._v(" "),a("ul",[a("li",[a("img",{attrs:{src:t(1022),alt:"image-20210119161418971"}})]),s._v(" "),a("li",[s._v("和关系型数据库对比")]),s._v(" "),a("li",[a("img",{staticStyle:{zoom:"150%"},attrs:{src:"ElasticSearch.assets/image-20210119162534250.png",alt:"image-20210119162534250"}}),a("img",{attrs:{src:t(1023),alt:"image-20210119162745358"}})]),s._v(" "),a("li",[a("img",{staticStyle:{zoom:"150%"},attrs:{src:"ElasticSearch.assets/image-20210119162534250.png",alt:"image-20210119162534250"}}),a("img",{attrs:{src:t(1024),alt:"image-20210119162745358"}})]),s._v(" "),a("li",[s._v("mapping 的信息")]),s._v(" "),a("li",[a("img",{attrs:{src:t(1025),alt:"image-20210119163257336"}})]),s._v(" "),a("li",[s._v("理解primary shard和replica")]),s._v(" "),a("li",[a("img",{attrs:{src:t(1026),alt:"image-20210119163436455"}})]),s._v(" "),a("li",[a("img",{attrs:{src:t(1027),alt:"image-20210119163622645"}})]),s._v(" "),a("li",[s._v("注意：\n"),a("ul",[a("li",[s._v("Double等类型")]),s._v(" "),a("li",[s._v("作为全文搜索引擎，ES将String域的字段可以分为准确数据类型，和全文文本类型。\n"),a("ul",[a("li",[s._v("String")]),s._v(" "),a("li",[s._v("我爱你--keyword")]),s._v(" "),a("li",[s._v("我爱你一生一世-----text")])])])])]),s._v(" "),a("li",[a("img",{staticStyle:{zoom:"150%"},attrs:{src:"ElasticSearch.assets/image-20210119164615124.png",alt:"image-20210119164615124"}})])]),s._v(" "),a("h2",{attrs:{id:"es安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es安装"}},[s._v("#")]),s._v(" ES安装")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("大数据组件安装步骤")]),s._v(" "),a("ul",[a("li",[s._v("ES的安装需要使用普通用户，不能使用Root用户")]),s._v(" "),a("li",[a("img",{attrs:{src:t(1028),alt:"image-20210119171631437"}})]),s._v(" "),a("li",[a("img",{attrs:{src:t(1029),alt:"image-20210119172146071"}})]),s._v(" "),a("li",[s._v("1-上传压缩包----如果没有编译需要重新编译")]),s._v(" "),a("li",[s._v("2-进入Config或Conf目录下更改配置文件")]),s._v(" "),a("li",[s._v("3-ES架构应该如何配置？")]),s._v(" "),a("li",[a("img",{staticStyle:{zoom:"150%"},attrs:{src:"ElasticSearch.assets/image-20210119171119516.png",alt:"image-20210119171119516"}})]),s._v(" "),a("li",[s._v("4-进入bin目录下启动")]),s._v(" "),a("li",[s._v("5-查看WebUi")])])]),s._v(" "),a("li",[a("p",[s._v("安装过程")])]),s._v(" "),a("li",[a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('安装脚本：\n\n1-创建用户\nuseradd itcast \npasswd itcast\n2-加sudo权限\nvisudo\n# 第100行\nitcast      ALL=(ALL)       ALL\n3-上传压缩包\nmkdir -p /export/server/es\nchown -R itcast:itcast /export/server/es\n4-使用root用户执行\n# 在node1.itcast.cn、node2.itcast.cn、node3.itcast.cn创建es文件夹，并修改owner为itcast用户\nmkdir -p /export/server/es\nchown -R itcast:itcast /export/server/es\n5-使用itcast用户来执行以下操作\n# 解压Elasticsearch\ncd /export/software/ \ntar -zvxf elasticsearch-7.6.1-linux-x86_64.tar.gz -C /export/server/es/\n6-node1上修改\ncd /export/server/es/elasticsearch-7.6.1/config\nmkdir -p /export/server/es/elasticsearch-7.6.1/log\nmkdir -p /export/server/es/elasticsearch-7.6.1/data\nrm -rf elasticsearch.yml\n\nvim elasticsearch.yml\ncluster.name: itcast-es\nnode.name: node1.itcast.cn\npath.data: /export/server/es/elasticsearch-7.6.1/data\npath.logs: /export/server/es/elasticsearch-7.6.1/log\nnetwork.host: node1.itcast.cn\nhttp.port: 9200\ndiscovery.seed_hosts: ["node1.itcast.cn", "node2.itcast.cn", "node3.itcast.cn"]\ncluster.initial_master_nodes: ["node1.itcast.cn", "node2.itcast.cn"]\nbootstrap.system_call_filter: false\nbootstrap.memory_lock: false\nhttp.cors.enabled: true\nhttp.cors.allow-origin: "*"\n\ncd /export/server/es/elasticsearch-7.6.1/config\nvim jvm.options\n-Xms2g\n-Xmx2g\n\n7-上传到其他节点上\ncd /export/server/es/\nscp -r elasticsearch-7.6.1/ node2.itcast.cn:$PWD\nscp -r elasticsearch-7.6.1/ node3.itcast.cn:$PWD\n\n8-node2和node3更改\nnode.name: node2.itcast.cn\nnetwork.host: node2.itcast.cn\n\nnode.name: node3.itcast.cn\nnetwork.host: node3.itcast.cn\n8-更改文件数的限制\nsudo vi /etc/security/limits.conf \n* soft nofile 65536\n* hard nofile 131072\n* soft nproc 2048\n* hard nproc 4096\n9-普通用户启动线程数限制\nCentos7\nsudo vi /etc/security/limits.d/20-nproc.conf\n* soft nproc 4096\n\n10-原因：最大虚拟内存太小\n每次启动机器都手动执行下。\n三台机器执行以下命令 \n第一种调整: 临时调整, 退出会话 重新登录 就会失效的 (测试环境下配置)，建议使用第一种因为测试情况下只有es占用大内存\nsudo  sysctl -w vm.max_map_count=262144    \n\n注意：如果下次退出登录，重启机器后需要重新执行上述调整虚拟内存最大值\n\n11-启动\n/export/server/es/elasticsearch-7.6.1/bin/elasticsearch 前台启动---为什么，通过前台启动如果没有报错，说明没问题\nnohup /export/server/es/elasticsearch-7.6.1/bin/elasticsearch  & 后台启动\nnohup /export/server/es/elasticsearch-7.6.1/bin/elasticsearch 2>&1 &\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br"),a("span",{staticClass:"line-number"},[s._v("71")]),a("br"),a("span",{staticClass:"line-number"},[s._v("72")]),a("br"),a("span",{staticClass:"line-number"},[s._v("73")]),a("br"),a("span",{staticClass:"line-number"},[s._v("74")]),a("br"),a("span",{staticClass:"line-number"},[s._v("75")]),a("br"),a("span",{staticClass:"line-number"},[s._v("76")]),a("br"),a("span",{staticClass:"line-number"},[s._v("77")]),a("br"),a("span",{staticClass:"line-number"},[s._v("78")]),a("br"),a("span",{staticClass:"line-number"},[s._v("79")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("界面")])]),s._v(" "),a("li",[a("p",[a("img",{attrs:{src:t(1030),alt:"image-20210119174053997"}})])])]),s._v(" "),a("p",[s._v("ES的插件的安装--ES-Head")]),s._v(" "),a("ul",[a("li",[s._v("安装")]),s._v(" "),a("li",[a("img",{attrs:{src:t(1031),alt:"image-20210119174240364"}})]),s._v(" "),a("li",[a("img",{attrs:{src:t(1032),alt:"image-20210119175323679"}})])]),s._v(" "),a("p",[s._v("ES安装IK分词")]),s._v(" "),a("ul",[a("li",[a("img",{attrs:{src:t(1033),alt:"image-20210119175809758"}})])]),s._v(" "),a("h2",{attrs:{id:"_9-es的restfulapi介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-es的restfulapi介绍"}},[s._v("#")]),s._v(" 9.ES的RestFulAPI介绍")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("Rest:用URI表示资源，用HTTP方法(GET, POST, PUT, DELETE)")])]),s._v(" "),a("li",[a("p",[s._v("RESTful API 要求前端以一种预定义的语法格式发送请求，那么服务端就只需要定义一个统一的响应接口，不必像之前那样解析各色各式的请求。")])]),s._v(" "),a("li",[a("img",{staticStyle:{zoom:"150%"},attrs:{src:"ElasticSearch.assets/image-20210119181244092.png",alt:"image-20210119181244092"}})]),s._v(" "),a("li",[a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('下面的代码无需执行，只需看懂，如需要执行在后面执行\nPUT /my-index\n{\n    "mapping": {\n        "properties": {\n            "employee-id": {\n                "type": "keyword",\n                "index": false\n            }\n        }\n    }\n}\n\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])])]),s._v(" "),a("li",[a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("GET")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("_sql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("format"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("json\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"query"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"SELECT * FROM tbl_waybill limit 1"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[a("img",{attrs:{src:t(1034),alt:"image-20210621215351365"}})])]),s._v(" "),a("li",[a("p",[a("img",{attrs:{src:t(1035),alt:"image-20210621215718825"}})])]),s._v(" "),a("li",[a("p",[a("img",{attrs:{src:t(1036),alt:"image-20210621215945802"}})])]),s._v(" "),a("li",[a("p",[a("img",{attrs:{src:t(1037),alt:"image-20210621220059751"}})])]),s._v(" "),a("li",[a("p",[s._v("完毕")])])]),s._v(" "),a("p",[s._v("VSCode结合ES编程")]),s._v(" "),a("ul",[a("li",[a("p",[a("img",{attrs:{src:t(1038),alt:"image-20210119180458274"}})])]),s._v(" "),a("li",[a("p",[a("img",{attrs:{src:t(1039),alt:"image-20210119180725798"}})])]),s._v(" "),a("li",[a("p",[a("img",{attrs:{src:t(1040),alt:"image-20210119180930539"}})])])]),s._v(" "),a("p",[s._v("总结")]),s._v(" "),a("ul",[a("li",[s._v("引入搜索领域相关知识\n"),a("ul",[a("li",[s._v("什么是搜索？根据输入的关键词得到想要的信息")]),s._v(" "),a("li",[s._v("搜索基础：\n"),a("ul",[a("li",[s._v("传统搜索：MySQL")]),s._v(" "),a("li",[s._v("Lucene：单机版本的引擎")]),s._v(" "),a("li",[s._v("Solr：3.0以后出现分布式，格式多，但是Solr分布式读写请求效果不好")]),s._v(" "),a("li",[s._v("ES：分布式搜索")])])])])]),s._v(" "),a("li",[s._v("ES的引入\n"),a("ul",[a("li",[s._v("百度")]),s._v(" "),a("li",[s._v("京东")]),s._v(" "),a("li",[s._v("天猫")])])]),s._v(" "),a("li",[s._v("Lucene的引入及案例\n"),a("ul",[a("li",[s._v("IK分词")]),s._v(" "),a("li",[s._v("构建lucene的索引")]),s._v(" "),a("li",[s._v("通过索引查询想要得到的结果")])])]),s._v(" "),a("li",[a("strong",[s._v("ES分布式架构的角色划分")]),s._v(" "),a("ul",[a("li",[s._v("Master")]),s._v(" "),a("li",[s._v("Worker(DataNode)")]),s._v(" "),a("li",[s._v("PrimaryShard")]),s._v(" "),a("li",[s._v("Replica Shard")]),s._v(" "),a("li",[s._v("Index")]),s._v(" "),a("li",[s._v("Type")]),s._v(" "),a("li",[s._v("documnet")]),s._v(" "),a("li",[s._v("filed")]),s._v(" "),a("li",[s._v("mapping")])])]),s._v(" "),a("li",[s._v("ES架构图(分布式搜索)\n"),a("ul",[a("li",[s._v("两套主从：\n"),a("ul",[a("li",[s._v("master和worker主从")]),s._v(" "),a("li",[s._v("primary shard和replica shard")])])])])]),s._v(" "),a("li",[s._v("ES安装----因为有架构才更改配置文件\n"),a("ul",[a("li",[s._v("elasticserach.yml文件")]),s._v(" "),a("li",[s._v("增加集群名字，节点名字，节点端口号等")])])]),s._v(" "),a("li",[s._v("ES的插件的安装--ES-Head\n"),a("ul",[a("li",[s._v("本质上就是web套件")])])]),s._v(" "),a("li",[s._v("ES的RestFulAPI介绍\n"),a("ul",[a("li",[s._v("类似于Json格式的数据")])])]),s._v(" "),a("li",[s._v("VSCode结合ES编程\n"),a("ul",[a("li",[s._v("安装ElasticSearch-Vscode插件")]),s._v(" "),a("li",[s._v("执行查询结果")])])])]),s._v(" "),a("h3",{attrs:{id:""}},[a("a",{staticClass:"header-anchor",attrs:{href:"#"}},[s._v("#")])])])}),[],!1,null,null,null);a.default=e.exports}}]);